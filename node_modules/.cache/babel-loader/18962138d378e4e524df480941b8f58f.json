{"ast":null,"code":"import axios from \"axios\";\nconst ROOT_URL = \"http://localhost:5000\";\nexport const loginUser = async (dispatch, loginPayload) => {\n  console.log(loginPayload);\n  const requestOptions = {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(loginPayload)\n  };\n\n  try {\n    dispatch({\n      type: \"REQUEST_LOGIN\"\n    });\n    let response = await axios.get(`&ROOT_URL/login`, requestOptions);\n    let data = response.data;\n\n    if (data.user) {\n      dispatch({\n        type: \"LOGIN_SUCCESS\",\n        payload: data\n      });\n      localStorage.setItem(\"currentUser\", JSON.stringify(data));\n      return data;\n    }\n\n    dispatch({\n      type: \"LOGIN_ERROR\",\n      error: data.errors[0]\n    });\n    return;\n  } catch (err) {\n    console.log(\"Error occurred while logging in\");\n  }\n};\nexport const logout = dispatch => {\n  dispatch({\n    type: \"LOGOUT\"\n  });\n  localStorage.removeItem(\"currentUser\");\n  localStorage.removeItem(\"token\");\n};","map":{"version":3,"sources":["D:/programming/neogcamp/LevelOne/ecommerce-app - review 1/src/auth/auth-actions.js"],"names":["axios","ROOT_URL","loginUser","dispatch","loginPayload","console","log","requestOptions","method","headers","body","JSON","stringify","type","response","get","data","user","payload","localStorage","setItem","error","errors","err","logout","removeItem"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,QAAQ,GAAG,uBAAjB;AAEA,OAAO,MAAMC,SAAS,GAAG,OAAOC,QAAP,EAAiBC,YAAjB,KAAkC;AACzDC,EAAAA,OAAO,CAACC,GAAR,CAAYF,YAAZ;AACA,QAAMG,cAAc,GAAG;AACrBC,IAAAA,MAAM,EAAE,MADa;AAErBC,IAAAA,OAAO,EAAE;AAAE,sBAAgB;AAAlB,KAFY;AAGrBC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeR,YAAf;AAHe,GAAvB;;AAMA,MAAI;AACFD,IAAAA,QAAQ,CAAC;AAAEU,MAAAA,IAAI,EAAE;AAAR,KAAD,CAAR;AACA,QAAIC,QAAQ,GAAG,MAAMd,KAAK,CAACe,GAAN,CAAW,iBAAX,EAA6BR,cAA7B,CAArB;AACA,QAAIS,IAAI,GAAGF,QAAQ,CAACE,IAApB;;AAEA,QAAIA,IAAI,CAACC,IAAT,EAAe;AACbd,MAAAA,QAAQ,CAAC;AAAEU,QAAAA,IAAI,EAAE,eAAR;AAAyBK,QAAAA,OAAO,EAAEF;AAAlC,OAAD,CAAR;AACAG,MAAAA,YAAY,CAACC,OAAb,CAAqB,aAArB,EAAoCT,IAAI,CAACC,SAAL,CAAeI,IAAf,CAApC;AACA,aAAOA,IAAP;AACD;;AAEDb,IAAAA,QAAQ,CAAC;AAAEU,MAAAA,IAAI,EAAE,aAAR;AAAuBQ,MAAAA,KAAK,EAAEL,IAAI,CAACM,MAAL,CAAY,CAAZ;AAA9B,KAAD,CAAR;AACA;AACD,GAbD,CAaE,OAAOC,GAAP,EAAY;AACZlB,IAAAA,OAAO,CAACC,GAAR,CAAY,iCAAZ;AACD;AACF,CAxBM;AA0BP,OAAO,MAAMkB,MAAM,GAAIrB,QAAD,IAAc;AAClCA,EAAAA,QAAQ,CAAC;AAAEU,IAAAA,IAAI,EAAE;AAAR,GAAD,CAAR;AACAM,EAAAA,YAAY,CAACM,UAAb,CAAwB,aAAxB;AACAN,EAAAA,YAAY,CAACM,UAAb,CAAwB,OAAxB;AACD,CAJM","sourcesContent":["import axios from \"axios\";\r\n\r\nconst ROOT_URL = \"http://localhost:5000\";\r\n\r\nexport const loginUser = async (dispatch, loginPayload) => {\r\n  console.log(loginPayload);\r\n  const requestOptions = {\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    body: JSON.stringify(loginPayload),\r\n  };\r\n\r\n  try {\r\n    dispatch({ type: \"REQUEST_LOGIN\" });\r\n    let response = await axios.get(`&ROOT_URL/login`, requestOptions);\r\n    let data = response.data;\r\n\r\n    if (data.user) {\r\n      dispatch({ type: \"LOGIN_SUCCESS\", payload: data });\r\n      localStorage.setItem(\"currentUser\", JSON.stringify(data));\r\n      return data;\r\n    }\r\n\r\n    dispatch({ type: \"LOGIN_ERROR\", error: data.errors[0] });\r\n    return;\r\n  } catch (err) {\r\n    console.log(\"Error occurred while logging in\");\r\n  }\r\n};\r\n\r\nexport const logout = (dispatch) => {\r\n  dispatch({ type: \"LOGOUT\" });\r\n  localStorage.removeItem(\"currentUser\");\r\n  localStorage.removeItem(\"token\");\r\n};\r\n"]},"metadata":{},"sourceType":"module"}